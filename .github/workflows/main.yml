name: spellcheck
on:
  push:
  pull_request:
jobs:
  check-spelling:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Spelling
        uses: rojopolis/spellcheck-github-actions@0.23.0
        with:
          config_path: .spellcheck.yml
          task_name: Markdown

  build-pdf:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install PowerShell
      run: |
        sudo apt-get update
        sudo apt-get install -y powershell

    - name: Run PowerShell script
      shell: pwsh
      run: |
        ./scripts/Merge-MarkdownFiles.ps1

    - name: Copy images folder to root directory
      run: |
        cp -r ./.github/workflows/bin/images ./images
        sed -i '/!\[\](images\/qlcplus\.svg)/d'  ./.github/workflows/bin/combined_documentation.md 

      env:
        IMAGES_TO_PROCESS: "dmx-usb-settings.png, add_dump.png, animation.png, attach.png, audio.png, audioinput.png, autostart.png, back.png, beam.png, blackout.png, blind.png, button.png, buttonmatrix.png, chaser.png, check.png, checkbox_empty.png, checkbox_full.png, clock.png, collection.png, color.png, colorwheel.png, commit-message.png, configure.png, cuelist.png, current.png, delete.png, design.png, detach.png, dimmer.png, diptool.png, down.png, edit-this-page.png, edit.png, editclear.png, editcopy.png, editcopyall.png, editcut.png, editdelete.png, editpaste.png, edit_add.png, edit_remove.png, effect.png, efx.png, exit.png, expand.png, fade.png, fan.png, fileclose.png, fileexport.png, fileimport.png, filenew.png, fileopen.png, filesave.png, filesaveas.png, fixture.png, flash.png, flower.png, folder.png, fontcolor.png, fonts.png, forward.png, frame.png, frameraised.png, framesunken.png, fullscreen.png, function.png, global.png, gobo.png, grid.png, group.png, hazer.png, help.png, image.png, input.png, input_output.png, intensity.png, key_bindings.png, knob.png, label.png, laser.png, ledbar_beams.png, ledbar_pixels.png, liveedit.png, liveedit_vc.png, lock.png, monitor.png, movinghead.png, operate.png, other.png, pan.png, panic.png, player_pause.png, player_play.png, player_stop.png, prism.png, qt.png, rainbow.png, random.png, record.png, refresh.png, remap.png, resize.png, rgbmatrix.png, rgbpanel.png, scanner.png, scene.png, script.png, sequence.png, show.png, shutter.png, slider.png, slidermatrix.png, smoke.png, soloframe.png, speed.png, square.png, star.png, strobe.png, tabview.png, tilt.png, uncheck.png, undo.png, ungroup.png, unlock.png, up.png, video.png, virtualconsole.png, wizard.png, wizard_256.png, xypad-point-blue.png, xypad-point-yellow.png, xypad-point.png, xypad.png, pan-tilt.png, main-window.png, channel_modifier.png, fixture_remap.png, efx-general.png, efx-movement.png, blending.png, speeddial.png, xypad-efx.png, xypad.png, xypad2.png, input-profile-midi-channels.png   , e131_configuration.png, fixture_editor_aliases.png, fixture_editor_channels.png, fixture_editor_channel_color.png, fixture_editor_channel_gobo.png, fixture_editor_channel_preset.png, fixture_editor_channel_shutter.png, fixture_editor_channel_wizard.png, fixture_editor_general.png, fixture_editor_modes.png, fixture_editor_mode_channels.png, fixture_editor_mode_edit_head.png, fixture_editor_mode_heads.png, fixture_editor_physical.png, command-line.png"  # List of images to process

    - name: Set up ImageMagick
      run: sudo apt-get install -y imagemagick

    - name: Adjust DPI of Specified Images
      run: |
        TARGET_DPI=72  # Set your desired DPI here
        for img in ${{env.IMAGES_TO_PROCESS}}; do
          if [ -f "$img" ]; then
            echo "Adjusting DPI of $img to $TARGET_DPI"
            mogrify -density $TARGET_DPI "$img"
          else
            echo "File $img does not exist, skipping..."
          fi
        done

    - name: Put current date into a variable
      run: |
        echo "EXPORT_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

    - name: Build PDF
      uses: docker://pandoc/extra
      with:
          args: >
            -s -o ./.github/workflows/bin/QLCplusDocumentation.pdf 
            ./.github/workflows/bin/combined_documentation.md 
            --listings 
            --pdf-engine=lualatex
            -V papersize=a4 
            -V geometry:margin=1in 
            -V classoption=oneside 
            -V toc=true
            -V toc-title="Table of Contents"
            -V mainfont="Source Sans Pro"
            -V sansfont="Source Sans Pro"
            -f markdown-raw_tex 

    - name: Create Title Page Markdown
      run: |
              echo "   " >  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo "   " >>  ./.github/workflows/bin/titlepage.md
              echo '![QLC+ Logo](images/qlcplus.svg){ style="width: 70%; margin: auto;" }'  >>  ./.github/workflows/bin/titlepage.md
              
    - name: Convert Title Page to PDF
      uses: docker://pandoc/extra
      with:
          args: >
                  -s -o ./.github/workflows/bin/titlepage.pdf 
                  ./.github/workflows/bin/titlepage.md 
                  --metadata title="Q Light Controller + Documentation" 
                  --metadata subtitle="Comprehensive Guide" 
                  --metadata author="docs.qlcplus.org" 
                  --metadata date=${{env.EXPORT_DATE}} 
                  --pdf-engine=lualatex
                  -V papersize=a4 
                  -V titlepage=true
                  -V titlepage-color="364e5e"
                  -V titlepage-text-color="000000"
                  -V titlepage-rule-color="000000"
                  -V titlepage-rule-height=2
                  -V geometry:margin=1in 
                  -V mainfont="Source Sans Pro"
                  -V sansfont="Source Sans Pro"  
                  -V pagestyle=empty

    - name: Combine Title Page and Documentation PDF
      run: |
        sudo apt-get update
        sudo apt-get install -y ghostscript
        gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=./.github/workflows/bin/QLCplusDocumentation_with_titlepage.pdf ./.github/workflows/bin/titlepage.pdf ./.github/workflows/bin/QLCplusDocumentation.pdf
     

    - name: Upload-Artifact
      uses: actions/upload-artifact@v4
      with:
          name: qlcplus-docs-build
          path: ./.github/workflows/bin/
